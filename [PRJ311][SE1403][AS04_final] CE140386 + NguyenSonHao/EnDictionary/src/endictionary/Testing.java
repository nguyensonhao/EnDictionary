package endictionary;

import ObjectInfos.*;
import Models.WordModel;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author Nguyen Son Hao Ce140386
 */
public class Testing extends javax.swing.JFrame {

    EnDictionary parent;// creates parent
    WordModel wm;// creates wm
    ArrayList<Word> theTest;//creates Arraylist theTest 
    ArrayList<String> userInput;//creates Arraylist userInput
    DefaultListModel<String> theModel;//creates Arraylist theModel

    int total = 0;
    int wordIndex = -1;
    int correct = 0;

    /**
     * Creates new form Testing
     */
    public Testing(EnDictionary parent, WordModel wm, ArrayList<Word> theTest, ArrayList<String> userInput) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setIconImage(getToolkit().getDefaultToolkit().getImage(getClass().getResource("../img/english.png")));
        this.setSize(1022, 500);
        this.parent = parent;// parameter
        this.wm = wm;// parameter
        this.theTest = theTest;// parameter
        this.userInput = userInput;// parameter

        this.theModel = new DefaultListModel<>();// parameter
        lstIncorectAnswer.setModel(theModel);

    }

    /**
     * Refresh
     */
    public void refresh() {
        total = theTest.size();
        wordIndex = 0;
        correct = 0;

        theModel.removeAllElements();
        btnNext.setText("Next");

        updateTesting();
    }

    /**
     * Update Testing
     */
    private void updateTesting() {
        int numberTestedWord = wordIndex;

        lblCurrentWordValue.setText((wordIndex + 1) + "/" + total);// Count question
        lblCorrectValue.setText(correct + "");//Number correct question 
        lblInCorrectValue.setText((numberTestedWord - correct) + "");// Number incorrect question value
        lblPercentValue.setText(String.format("%.2f", 100 * correct / (float) total) + "%");// Percent value correct question

        Word word = theTest.get(wordIndex);
        int wId = word.getwId();
        String meaning = wm.showMeaningOnly(wId);// show question true when user input incorrect
        txtMeaning.setText(meaning);

        txtUserInput.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMeaning = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMeaning = new javax.swing.JTextPane();
        lblUserInput = new javax.swing.JLabel();
        txtUserInput = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();
        txtTestInfo = new javax.swing.JPanel();
        lblCurrentWord = new javax.swing.JLabel();
        lblCurrentWordValue = new javax.swing.JLabel();
        lblCorrect = new javax.swing.JLabel();
        lblInCorrect = new javax.swing.JLabel();
        lblCorrectValue = new javax.swing.JLabel();
        lblInCorrectValue = new javax.swing.JLabel();
        lblPercentValue = new javax.swing.JLabel();
        lblPercent = new javax.swing.JLabel();
        pnlIncorrectAnswers = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstIncorectAnswer = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EnDictionary V1.0[Test]");

        lblMeaning.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblMeaning.setText("Meaning");

        txtMeaning.setEditable(false);
        txtMeaning.setContentType("text/html"); // NOI18N
        txtMeaning.setMaximumSize(new java.awt.Dimension(6, 6));
        txtMeaning.setOpaque(false);
        txtMeaning.setPreferredSize(new java.awt.Dimension(7, 6));
        jScrollPane1.setViewportView(txtMeaning);

        lblUserInput.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblUserInput.setText("Enter yor word here");

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        txtTestInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Test Information"));

        lblCurrentWord.setText("Current word:");

        lblCorrect.setText("Correct");

        lblInCorrect.setText("Incorrect");

        lblPercent.setText("Percent:");

        javax.swing.GroupLayout txtTestInfoLayout = new javax.swing.GroupLayout(txtTestInfo);
        txtTestInfo.setLayout(txtTestInfoLayout);
        txtTestInfoLayout.setHorizontalGroup(
            txtTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtTestInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txtTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCurrentWord)
                    .addComponent(lblCorrect)
                    .addComponent(lblInCorrect)
                    .addComponent(lblPercent))
                .addGap(63, 63, 63)
                .addGroup(txtTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInCorrectValue, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCorrectValue, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCurrentWordValue)
                    .addComponent(lblPercentValue))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        txtTestInfoLayout.setVerticalGroup(
            txtTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtTestInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txtTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrentWord)
                    .addComponent(lblCurrentWordValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(txtTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCorrect)
                    .addComponent(lblCorrectValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txtTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInCorrect)
                    .addComponent(lblInCorrectValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(txtTestInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPercent)
                    .addComponent(lblPercentValue))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlIncorrectAnswers.setBorder(javax.swing.BorderFactory.createTitledBorder("Incorrect anwers"));

        lstIncorectAnswer.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstIncorectAnswer);

        javax.swing.GroupLayout pnlIncorrectAnswersLayout = new javax.swing.GroupLayout(pnlIncorrectAnswers);
        pnlIncorrectAnswers.setLayout(pnlIncorrectAnswersLayout);
        pnlIncorrectAnswersLayout.setHorizontalGroup(
            pnlIncorrectAnswersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIncorrectAnswersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlIncorrectAnswersLayout.setVerticalGroup(
            pnlIncorrectAnswersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlIncorrectAnswersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(lblMeaning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblUserInput, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtUserInput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlIncorrectAnswers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTestInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMeaning, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(lblUserInput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUserInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNext)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTestInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlIncorrectAnswers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Button Next, finish, close
     *
     * @param evt
     */
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed

        if (wordIndex < theTest.size()) {
            Word word = theTest.get(wordIndex);// creates word
            if (txtUserInput.getText().equals(word.getwText())) {// compare word user input with word in database
                correct++;
            } else {
                String str = "";
                str += (wordIndex + 1) + ". Correct: " + word.getwText() + " #Wrong answer:" + txtUserInput.getText();// out put wrong answer
                theModel.addElement(str);
            }
            wordIndex++;
            if (wordIndex == theTest.size() - 1) {
                btnNext.setText("Finish");
            } else if (wordIndex == theTest.size()) {
                btnNext.setText("Close");
            }
            if (wordIndex < theTest.size()) {
                updateTesting();// load again
            }
        } else {
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnNextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNext;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCorrect;
    private javax.swing.JLabel lblCorrectValue;
    private javax.swing.JLabel lblCurrentWord;
    private javax.swing.JLabel lblCurrentWordValue;
    private javax.swing.JLabel lblInCorrect;
    private javax.swing.JLabel lblInCorrectValue;
    private javax.swing.JLabel lblMeaning;
    private javax.swing.JLabel lblPercent;
    private javax.swing.JLabel lblPercentValue;
    private javax.swing.JLabel lblUserInput;
    private javax.swing.JList<String> lstIncorectAnswer;
    private javax.swing.JPanel pnlIncorrectAnswers;
    private javax.swing.JTextPane txtMeaning;
    private javax.swing.JPanel txtTestInfo;
    private javax.swing.JTextField txtUserInput;
    // End of variables declaration//GEN-END:variables
}
