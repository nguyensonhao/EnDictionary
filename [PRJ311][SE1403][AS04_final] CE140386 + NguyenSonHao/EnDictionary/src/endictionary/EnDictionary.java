package endictionary;

import Database.DBConnection;
import Models.*;
import ObjectInfos.*;
import java.awt.Component;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author Nguyen Son Hao CE140386
 */
public class EnDictionary extends javax.swing.JFrame {

    DBConnection db;
    Connection conn;
    TypeModel tm;
    MeaningModel mm;
    WordModel wm;
    NewWord frmNewWord = null;
    UpdateWord frmUpdateWord = null;
    int selectedWordId = -1;
    ArrayList<Word> theTest = null;
    ArrayList<String> userInput = null;
    TestCreator frmTestCreator = null;

    /**
     * Creates new form EnDictionary
     */
    public EnDictionary() {
        try {
            initComponents();
            //center fram on the screen
            this.setLocationRelativeTo(null);
            //Set icon for progarm
            this.setIconImage(getToolkit().getDefaultToolkit().getImage(getClass().getResource("../img/english.png")));
            //Creates model
            db = new DBConnection();// connection
            conn = db.getConnection();// connection
            tm = new TypeModel(conn);// connection
            mm = new MeaningModel(conn);// connection
            wm = new WordModel(conn, tm, mm);// connection
            theTest = new ArrayList<Word>();
            userInput = new ArrayList<String>();

            //Load data from database
            tm.load();
            mm.load();
            wm.load();

            loadDictionary();

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * Load dictionary
     */
    public void loadDictionary() {
        lblWordList.setText("WORD LIST(" + wm.getSize() + "words)");
        ArrayList<String> listOfWords = wm.showDictionary();
        DefaultListModel listModel = new DefaultListModel();

        for (String word : listOfWords) {
            listModel.addElement(word);
        }
        lsEndictionary.setModel(listModel);

        lsEndictionary.setCellRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                String v = (String) value;
                if (v.startsWith("---")) {// if --- user not chose
                    return super.getListCellRendererComponent(list, value, index, false, false);

                } else {
                    return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

                }
            }
        });
    }

    /**
     * Show meaning
     *
     * @param wordSelected
     */
    public void showMeaning(String wordSelected) {
        Word word = wm.searchByFullWord(wordSelected);
        if (word != null) {
            int wid = word.getwId();
            String wordInfo = wm.showWord(wid);
            txtMeaning.setText(wordInfo);

            selectedWordId = wid;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWordList = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lsEndictionary = new javax.swing.JList<>();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMeaning = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EnDictionary V1.0");
        setName("EnDictionary"); // NOI18N

        lblWordList.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblWordList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWordList.setText("WORD LIST(0 words)");

        lsEndictionary.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lsEndictionary.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lsEndictionaryValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lsEndictionary);

        btnAdd.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/minus.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/star.png"))); // NOI18N
        btn.setText("Test");
        btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionPerformed(evt);
            }
        });

        txtMeaning.setEditable(false);
        txtMeaning.setContentType("text/html"); // NOI18N
        jScrollPane3.setViewportView(txtMeaning);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWordList, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate))
                            .addComponent(btn, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblWordList)
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Button test
     *
     * @param evt
     */
    private void btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionPerformed

        if (frmTestCreator == null) {
            frmTestCreator = new TestCreator(this, wm, theTest, userInput);
        }
        frmTestCreator.refresh();
        frmTestCreator.setVisible(true);
    }//GEN-LAST:event_btnActionPerformed
    /**
     * Button add word
     *
     * @param evt
     */
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        if (frmNewWord == null) {
            frmNewWord = new NewWord(this, tm, mm, wm);
        }
        frmNewWord.FrmresetNeword();
        frmNewWord.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed
    /**
     * List dictionary
     *
     * @param evt
     */
    private void lsEndictionaryValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lsEndictionaryValueChanged
        String wordSelected = lsEndictionary.getSelectedValue();
        showMeaning(wordSelected);
    }//GEN-LAST:event_lsEndictionaryValueChanged
    /**
     * Update button
     *
     * @param evt
     */
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        if (selectedWordId == -1) {
            JOptionPane.showMessageDialog(this, "You must select a word");
        } else {
            if (frmUpdateWord == null) {
                frmUpdateWord = new UpdateWord(this, tm, mm, wm, selectedWordId);
            }
            frmUpdateWord.loadOldWord();
            frmUpdateWord.setVisible(true);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    /**
     * Delete button
     *
     * @param evt
     */
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        if (selectedWordId == -1) {
            JOptionPane.showMessageDialog(this, "You must select a word");
        } else {
            Word word = wm.searchById(selectedWordId);
            String wText = word.getwText();
            int option = JOptionPane.showConfirmDialog(this, "Do you really want to delete word " + wText + " ?");
            if (option == 0) { //click on Yes button
                //delete word
                wm.delete(selectedWordId);
                loadDictionary();
                JOptionPane.showConfirmDialog(this, "The word '" + wText + "' is deleted!");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnDictionary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblWordList;
    private javax.swing.JList<String> lsEndictionary;
    private javax.swing.JTextPane txtMeaning;
    // End of variables declaration//GEN-END:variables
}
